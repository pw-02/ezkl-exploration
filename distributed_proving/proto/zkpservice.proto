syntax = "proto3";

package zkpservice;


service ZKPWorkerService {
    // Computes a zero-knowledge proof for the provided model and input data
    rpc ComputeProof (ProofRequest) returns (ProofResponse);
    // Check the status of the worker
    rpc Ping (Message) returns (MessageResponse);
    rpc CheckProofStatus (ProofStatusRequest) returns (ProofStatusResponse);

}

// The request message containing the onnx model (as bytes) and input data.
message ProofRequest {
  string model_id = 1;  // Unique ID for the model
  bytes onnx_model = 2;  // The ONNX model as bytes
  string input_data = 3;  // The input data as a JSON string
}

message ProofStatusRequest {
    string request_id = 1;  // Unique ID for the request
}


message ProofStatusResponse {
    bool success = 1;
    bytes proof = 2;
    string performance_data = 3;
    string message = 4;     // Status message (e.g., "Processing" or "Completed")
}


// The response message containing the computed proof and success status.
message ProofResponse {
    string request_id = 1;  // Unique ID for the request
    string message = 2;     // Status message (e.g., "Request received")
}

// A simple message containing a text message.
message Message {
  string message = 1;
}

// The response message for the Ping method.
message MessageResponse {
  string message = 1;
  bool received = 2;
}