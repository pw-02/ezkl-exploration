 |       0 |                   -> >3/0              | Source                    input.1                                            [] => [1,1,32,32,F32]
 |      1 |                   -> >3/1              | Const                     conv1.weight.0                                     [] => [6,1,3,3,F32 -0.3098033, 0.24202888, 0.27357757, 0.32290742, 0.28519535, 0.15430927, -0.10154772, 0.16282365, 0.122435614, 0.059910893, 0.3208816, 0.026117127...]
 |      2 |                   -> >3/2              | Const                     conv1.bias.0                                       [] => [6,F32 0.040680766, -0.06265144, 0.32689142, 0.12525082, 0.1526463, -0.012306213]
 |      3 | 0/0>     1/0>     -> >5/0              | Conv                      /conv1/Conv                                        [1,1,32,32,F32, 6,1,3,3,F32 -0.3098033, 0.24202888, 0.27357757, 0.32290742, 0.28519535, 0.15430927, -0.10154772, 0.16282365, 0.122435614, 0.059910893, 0.3208816, 0.026117127..., 6,F32 0.040680766, -0.06265144, 0.32689142, 0.12525082, 0.1526463, -0.012306213] => [1,6,30,30,F32]
 |                                                 |   * inputs: 0/0>, 1/0>, 2/0>
 |                                                 |   * output #0: /conv1/Conv_output_0 >5/0
 |      4 |                   -> >5/1     >10/1    | Const                     /Relu.low.cst                                      [] => [1,1,1,1,F32 0]
 |      5 | 3/0>     4/0>     -> >6/0              | Max                       /Relu.low                                          [1,6,30,30,F32, 1,1,1,1,F32 0] => [1,6,30,30,F32]
 |                                                 |   * output #0: /Relu_output_0 >6/0
 |      6 | 5/0>              -> >9/0              | MaxPool                   /MaxPool                                           [1,6,30,30,F32] => [1,6,15,15,F32]
 |                                                 |   * output #0: /MaxPool_output_0 >9/0
 |      7 |                   -> >9/1              | Const                     conv2.weight.0                                     [] => [16,6,3,3,F32 -0.043484118, -0.03738342, 0.10806077, -0.10046531, 0.06520431, -0.0021749926, -0.004876627, -0.06720097, -0.100102924, 0.02668536, 0.06496944, 0.04773109...]
 |      8 |                   -> >9/2              | Const                     conv2.bias.0                                       [] => [16,F32 -0.058797624, 0.0033393018, 0.011460314, 0.08412132, 0.02290074, -0.06759965, 0.046362415, 0.085346974, -0.09687946, 0.110746555, -0.07428643, 0.083295435...]
 |      9 | 6/0>     7/0>     -> >10/0             | Conv                      /conv2/Conv                                        [1,6,15,15,F32, 16,6,3,3,F32 -0.043484118, -0.03738342, 0.10806077, -0.10046531, 0.06520431, -0.0021749926, -0.004876627, -0.06720097, -0.100102924, 0.02668536, 0.06496944, 0.04773109..., 16,F32 -0.058797624, 0.0033393018, 0.011460314, 0.08412132, 0.02290074, -0.06759965, 0.046362415, 0.085346974, -0.09687946, 0.110746555, -0.07428643, 0.083295435...] => [1,16,13,13,F32]
 |                                                 |   * inputs: 6/0>, 7/0>, 8/0>
 |                                                 |   * output #0: /conv2/Conv_output_0 >10/0
 |     10 | 9/0>     4/0>     -> >11/0             | Max                       /Relu_1.low                                        [1,16,13,13,F32, 1,1,1,1,F32 0] => [1,16,13,13,F32]
 |                                                 |   * output #0: /Relu_1_output_0 >11/0
 |     11 | 10/0>             -> >12/0             | MaxPool                   /MaxPool_1                                         [1,16,13,13,F32] => [1,16,6,6,F32]
 |                                                 |   * output #0: /MaxPool_1_output_0 >12/0
 |     12 | 11/0>             -> >14/0             | Reshape                   /Reshape.0                                         [1,16,6,6,F32] => [1,576,F32]
 |                                                 |   * output #0: /Reshape_output_0 >14/0
 |     13 |                   -> >14/1             | Const                     fc1.weight.0                                       [] => [120,576,F32 -0.016490757, -0.03724181, 0.032707687, 0.019894466, 0.019220099, -0.011466807, -0.013733178, -0.028364247, 0.0107270535, -0.017998368, 0.032691162, 0.022730019...]
 |     14 | 12/0>    13/0>    -> >16/0             | EinSum                    /fc1/Gemm.ab                                       [1,576,F32, 120,576,F32 -0.016490757, -0.03724181, 0.032707687, 0.019894466, 0.019220099, -0.011466807, -0.013733178, -0.028364247, 0.0107270535, -0.017998368, 0.032691162, 0.022730019...] => [120,F32]
 |     15 |                   -> >16/1             | Const                     /fc1/Gemm.c_add_axis_1                             [] => [120,F32 -0.03440287, -0.019317826, 0.0010473232, -0.01117685, -0.013505618, 0.0010846804, -0.022442725, -0.012791723, -0.022849834, 0.017284837, -0.019963881, 0.025902107...]
 |     16 | 14/0>    15/0>    -> >18/0             | Add                       /fc1/Gemm                                          [120,F32, 120,F32 -0.03440287, -0.019317826, 0.0010473232, -0.01117685, -0.013505618, 0.0010846804, -0.022442725, -0.012791723, -0.022849834, 0.017284837, -0.019963881, 0.025902107...] => [120,F32]
 |     17 |                   -> >18/1    >23/1    | Const                     /Relu_2.low.cst                                    [] => [1,F32 0]
 |     18 | 16/0>    17/0>    -> >20/0             | Max                       /Relu_2.low                                        [120,F32, 1,F32 0] => [120,F32]
 |     19 |                   -> >20/1             | Const                     fc2.weight.0                                       [] => [84,120,F32 -0.051847048, 0.0525399, -0.028202076, -0.07028847, 0.021267088, -0.04561544, 0.045470886, 0.090911835, -0.019860707, -0.005067579, -0.059282545, -0.051747095...]
 |     20 | 18/0>    19/0>    -> >22/0             | EinSum                    /fc2/Gemm.ab                                       [120,F32, 84,120,F32 -0.051847048, 0.0525399, -0.028202076, -0.07028847, 0.021267088, -0.04561544, 0.045470886, 0.090911835, -0.019860707, -0.005067579, -0.059282545, -0.051747095...] => [84,F32]
 |     21 |                   -> >22/1             | Const                     /fc2/Gemm.c_add_axis_1                             [] => [84,F32 -0.08676781, 0.012826735, -0.07108257, 0.02703332, 0.08714395, -0.05194746, 0.028652634, -0.06618994, -0.0077850884, 0.07957287, 0.04418519, -0.024064321...]
 |     22 | 20/0>    21/0>    -> >23/0             | Add                       /fc2/Gemm                                          [84,F32, 84,F32 -0.08676781, 0.012826735, -0.07108257, 0.02703332, 0.08714395, -0.05194746, 0.028652634, -0.06618994, -0.0077850884, 0.07957287, 0.04418519, -0.024064321...] => [84,F32]
 |     23 | 22/0>    17/0>    -> >25/0             | Max                       /Relu_3.low                                        [84,F32, 1,F32 0] => [84,F32]
 |     24 |                   -> >25/1             | Const                     fc3.weight.0                                       [] => [10,84,F32 0.08281041, -0.101658754, -0.058327213, -0.093181886, 0.10204902, 0.07690017, -0.048143864, 0.06866482, -0.09514348, 0.053536993, -0.022603724, -0.042071745...]
 |     25 | 23/0>    24/0>    -> >27/0             | EinSum                    /fc3/Gemm.ab                                       [84,F32, 10,84,F32 0.08281041, -0.101658754, -0.058327213, -0.093181886, 0.10204902, 0.07690017, -0.048143864, 0.06866482, -0.09514348, 0.053536993, -0.022603724, -0.042071745...] => [1,10,F32]
 |     26 |                   -> >27/1             | Const                     /fc3/Gemm.c_add_axis_1                             [] => [1,10,F32 -0.018556489, 0.073665015, -0.06602249, 0.08101629, -0.0810724, 0.09222325, -0.024277348, -0.095681414, -0.09679641, 0.064282]
 |     27 | 25/0>    26/0>    ->                   | Add                       /fc3/Gemm                                          [1,10,F32, 1,10,F32 -0.018556489, 0.073665015, -0.06602249, 0.08101629, -0.0810724, 0.09222325, -0.024277348, -0.095681414, -0.09679641, 0.064282] => [1,10,F32]
